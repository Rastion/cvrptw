{
    "entry_point": "cvrptw_problem:CVRPTWProblem",
    "default_params": {
      "instance_file": "instances/C101.25.txt"
    },
    "problem_type": "CVRPTW",
    "description": "In the capacitated vehicle routing problem with time windows (CVRPTW), a fleet of vehicles with uniform capacity must service customers with known demand, service time, and time windows. Each vehicle starts and ends at a common depot. The objectives, in lexicographic order, are to minimize total lateness (penalties for serving customers after their due times and for arriving home after a given maximum horizon), minimize the number of vehicles used, and minimize the total distance traveled.",
    "keywords": [
      "CVRPTW",
      "vehicle routing",
      "time windows",
      "Solomon instances",
      "optimization"
    ],
    "data_format": {
      "instance_file": {
        "format": "The instance file follows the Solomon format. It contains: a header (skip 4 tokens), then nb_trucks and truck_capacity, then 13 tokens to skip, then depot coordinates, then 2 tokens to skip, then max_horizon, then one token to skip, and finally for each customer: customer_id, x, y, demand, ready_time, due_time, service_time. Note: due time in the file represents the latest start time; the actual latest end time is computed by adding the service time."
      }
    },
    "decision_variables": {
      "customersSequences": {
        "type": "list of lists of int",
        "description": "A list (one per vehicle) where each inner list is a sequence (order) of customer indices (0-indexed) representing the route of that vehicle. These lists form a partition of {0, ..., nb_customers-1}."
      }
    },
    "objective": {
      "type": "minimization",
      "function": "Lexicographic combination of total lateness, number of vehicles used, and total distance traveled",
      "description": "For each route, compute the end time for each customer visit (accounting for travel time and service time), and calculate lateness penalties if a customer is served after its latest end time or if the route returns to depot after the max horizon. Then, combine total lateness, number of vehicles used, and total distance traveled in lexicographic order (using a large multiplier) to form the overall objective."
    },
    "solution_representation": "A dictionary with key 'customersSequences' mapping to a list of lists of integers. Each inner list represents the ordered sequence of customer indices (0-indexed) visited by a vehicle.",
    "compatible_optimizers": [
      "genetic_algorithm",
      "simulated_annealing",
      "particle_swarm",
      "tabu_search"
    ],
    "notes": "Instances are from the Augerat Set A (e.g., C101.25.txt). Note that customer indices are 0-indexed internally, and the depot is not included in the customer set."
  }
  